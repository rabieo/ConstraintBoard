{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Design","setDesign","Preconstruction","setPreconstruction","Construction","setConstruction","Scr","styled","div","Tit","h1","Bor","Subtit","h3","Dsubtit","h4","ListI","Col","Inputsec","button","input","Inputli","addsection","e","col","console","log","prev","target","firstElementChild","value","addlistitem","subsec","temp","map","object","sectionsName","list","subsection","item","onSubmit","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA6LeA,MAzLf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAMC,IAAOC,IAAV,oEAKHC,EAAMF,IAAOG,GAAV,wFAMHC,EAAMJ,IAAOC,IAAV,6KASHI,EAASL,IAAOM,GAAV,yGAONC,EAAUP,IAAOQ,GAAV,wFAMPC,EAAQT,IAAOC,IAAV,uFAMLS,EAAMV,IAAOC,IAAV,8MA6BHU,GAlBUX,IAAOY,OAAV,2WAkBIZ,IAAOa,MAAV,kNAWRC,EAAUd,IAAOa,MAAV,gNAWPE,EAAa,SAACC,EAAEC,GACpBC,QAAQC,IAAIF,GACH,UAALA,EACFvB,GAAU,SAAA0B,GAAI,4BAAQA,GAAR,CAAc,CAAC,aAAe,GAAf,OAAkBJ,EAAEK,OAAOC,kBAAkBC,OAAS,KAAO,SAE9E,mBAALN,EACPrB,GAAmB,SAAAwB,GAAI,4BAAQA,GAAR,CAAc,CAAC,aAAe,GAAf,OAAkBJ,EAAEK,OAAOC,kBAAkBC,OAAS,KAAO,SAEvF,gBAALN,GACPnB,GAAgB,SAAAsB,GAAI,4BAAQA,GAAR,CAAc,CAAC,aAAe,GAAf,OAAkBJ,EAAEK,OAAOC,kBAAkBC,OAAS,KAAO,UAI9FC,EAAc,SAACR,EAAEC,EAAIQ,GAEzB,GADAP,QAAQC,IAAIM,GACH,UAALR,EAAc,CAChB,IAAIS,EAAI,YAAOjC,GACfiC,EAAOA,EAAKC,KAAI,SAAAC,GAAM,OAAKA,EAAOC,cAAcJ,EAAU,CAAC,aAAeG,EAAOC,aAAc,KAAO,GAAP,mBAAWD,EAAOE,MAAlB,CAAuBd,EAAEK,OAAOC,kBAAkBC,SAAUK,KAC3JlC,EAAUgC,QAEP,GAAS,mBAALT,EAAuB,CAC9B,IAAIS,EAAI,YAAO/B,GACf+B,EAAOA,EAAKC,KAAI,SAAAC,GAAM,OAAKA,EAAOC,cAAcJ,EAAU,CAAC,aAAeG,EAAOC,aAAc,KAAO,GAAP,mBAAWD,EAAOE,MAAlB,CAAuBd,EAAEK,OAAOC,kBAAkBC,SAAUK,KAC3JhC,EAAmB8B,QAEhB,GAAS,gBAALT,EAAoB,CAC3B,IAAIS,EAAI,YAAO7B,GACf6B,EAAOA,EAAKC,KAAI,SAAAC,GAAM,OAAKA,EAAOC,cAAcJ,EAAU,CAAC,aAAeG,EAAOC,aAAc,KAAO,GAAP,mBAAWD,EAAOE,MAAlB,CAAuBd,EAAEK,OAAOC,kBAAkBC,SAAUK,KAC3J9B,EAAgB4B,KAMpB,OACE,eAAC3B,EAAD,WACE,cAACG,EAAD,2CACA,eAACE,EAAD,WACE,eAACM,EAAD,WACA,cAACL,EAAD,qBACCZ,EAAOkC,KAAI,SAACI,GAAD,OAAgB,gCAC1B,cAACxB,EAAD,UAAUwB,EAAWF,eACpBE,EAAWD,KAAKH,KAAI,SAACK,GAAD,OAAU,cAACvB,EAAD,UAAQuB,OACvC,sBAAMC,SAAU,SAACjB,GAAOQ,EAAYR,EAAE,SAASe,EAAWF,eAA1D,SACE,cAACf,EAAD,CAASoB,YAAY,0BAGzB,sBAAMD,SAAU,SAACjB,GAAOD,EAAWC,EAAE,WAArC,SACE,cAACL,EAAD,CAAUuB,YAAY,qBAIxB,eAACxB,EAAD,WACA,cAACL,EAAD,8BACCV,EAAgBgC,KAAI,SAACI,GAAD,OAAgB,gCACnC,cAACxB,EAAD,UAAUwB,EAAWF,eACpBE,EAAWD,KAAKH,KAAI,SAACK,GAAD,OAAU,cAACvB,EAAD,UAAQuB,OACvC,sBAAMC,SAAU,SAACjB,GAAOQ,EAAYR,EAAE,kBAAkBe,EAAWF,eAAnE,SACE,cAACf,EAAD,CAASoB,YAAY,0BAGzB,sBAAMD,SAAU,SAACjB,GAAOD,EAAWC,EAAE,oBAArC,SACE,cAACL,EAAD,CAAUuB,YAAY,qBAIxB,eAACxB,EAAD,WACA,cAACL,EAAD,2BACCR,EAAa8B,KAAI,SAACI,GAAD,OAAgB,gCAChC,cAACxB,EAAD,UAAUwB,EAAWF,eACpBE,EAAWD,KAAKH,KAAI,SAACK,GAAD,OAAU,cAACvB,EAAD,UAAQuB,OACvC,sBAAMC,SAAU,SAACjB,GAAOQ,EAAYR,EAAE,eAAee,EAAWF,eAAhE,SACE,cAACf,EAAD,CAASoB,YAAY,0BAGzB,sBAAMD,SAAU,SAACjB,GAAOD,EAAWC,EAAE,iBAArC,SACE,cAACL,EAAD,CAAUuB,YAAY,4BCpKjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f115af5e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components'\nimport './App.css';\n\nfunction App() {\n\n  const [Design, setDesign] = useState([])\n  const [Preconstruction, setPreconstruction] = useState([])\n  const [Construction, setConstruction] = useState([])\n\n  const Scr = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  `;\n\n  const Tit = styled.h1`\n  flex: 0 0 100%;\n  color: blue;\n  text-align: center;\n  `;\n\n  const Bor = styled.div`\n  flex: 0 0 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  `;\n\n  const Subtit = styled.h3`\n  flex: 0 0 100%;\n  color: black;\n  text-align: center;\n  margin: 0px;\n  `;\n\n  const Dsubtit = styled.h4`\n  flex: 0 0 100%;\n  color: black;\n  margin: 10px 30px;\n  `;\n\n  const ListI = styled.div`\n  flex: 0 0 100%;\n  color: black;\n  margin: 8px 50px;\n  `;\n\n  const Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 3px;\n  padding: 0.5rem 0;\n  margin: 0.5rem 1rem;\n  width: 450px;\n  color: white;\n  border: 2px solid black;\n  `;\n\n  const ButtonS = styled.button`\n  padding: 4px 32px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  transition-duration: 0.4s;\n  cursor: pointer;\n  background-color: white; \n  color: black; \n  border: 2px solid #4CAF50;\n  &:hover {\n    background-color: #4CAF50;\n    color: white;\n  }\n  `\n\n  const Inputsec = styled.input`\n  width: 90%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid blue;\n  border-radius: 4px;\n  box-sizing: border-box;\n  margin: 10px 5%;\n  `\n\n  const Inputli = styled.input`\n  width: 90%;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid red;\n  border-radius: 4px;\n  box-sizing: border-box;\n  margin: 10px 5%;\n  `\n\n  const addsection = (e,col) => {\n    console.log(col)\n    if (col==\"Design\"){\n      setDesign(prev => [...prev, {\"sectionsName\":`${e.target.firstElementChild.value}`, \"list\":[]} ])\n    }\n    else if (col==\"Preconstruction\"){\n      setPreconstruction(prev => [...prev, {\"sectionsName\":`${e.target.firstElementChild.value}`, \"list\":[]} ])\n    }\n    else if (col==\"Construction\"){\n      setConstruction(prev => [...prev, {\"sectionsName\":`${e.target.firstElementChild.value}`, \"list\":[]} ])\n    }\n  }\n\n  const addlistitem = (e,col,subsec) => {\n    console.log(subsec)\n    if (col==\"Design\"){\n      let temp = [...Design]\n      temp = temp.map(object => (object.sectionsName==subsec) ? {\"sectionsName\":object.sectionsName, \"list\":[...object.list,e.target.firstElementChild.value]} : object)\n      setDesign(temp)\n    }\n    else if (col==\"Preconstruction\"){\n      let temp = [...Preconstruction]\n      temp = temp.map(object => (object.sectionsName==subsec) ? {\"sectionsName\":object.sectionsName, \"list\":[...object.list,e.target.firstElementChild.value]} : object)\n      setPreconstruction(temp)\n    }\n    else if (col==\"Construction\"){\n      let temp = [...Construction]\n      temp = temp.map(object => (object.sectionsName==subsec) ? {\"sectionsName\":object.sectionsName, \"list\":[...object.list,e.target.firstElementChild.value]} : object)\n      setConstruction(temp)\n    }\n  }\n\n\n\n  return (\n    <Scr>\n      <Tit>BCA2 + TRBC Constraint Board</Tit>\n      <Bor>\n        <Col>\n        <Subtit>Design</Subtit>\n        {Design.map((subsection) => <div>\n          <Dsubtit>{subsection.sectionsName}</Dsubtit>\n          {subsection.list.map((item) => <ListI>{item}</ListI>)}\n          <form onSubmit={(e) => {addlistitem(e,\"Design\",subsection.sectionsName)}}>\n            <Inputli placeholder=\"Add Constrant\"></Inputli>\n          </form>\n          </div>)}\n        <form onSubmit={(e) => {addsection(e,\"Design\")}}>\n          <Inputsec placeholder=\"Add Section\"></Inputsec>\n        </form>\n        \n        </Col>\n        <Col>\n        <Subtit>Preconstruction</Subtit>\n        {Preconstruction.map((subsection) => <div>\n          <Dsubtit>{subsection.sectionsName}</Dsubtit>\n          {subsection.list.map((item) => <ListI>{item}</ListI>)}\n          <form onSubmit={(e) => {addlistitem(e,\"Preconstruction\",subsection.sectionsName)}}>\n            <Inputli placeholder=\"Add Constrant\"></Inputli>\n          </form>\n          </div>)}\n        <form onSubmit={(e) => {addsection(e,\"Preconstruction\")}}>\n          <Inputsec placeholder=\"Add Section\"></Inputsec>\n        </form>\n        \n        </Col>\n        <Col>\n        <Subtit>Construction</Subtit>\n        {Construction.map((subsection) => <div>\n          <Dsubtit>{subsection.sectionsName}</Dsubtit>\n          {subsection.list.map((item) => <ListI>{item}</ListI>)}\n          <form onSubmit={(e) => {addlistitem(e,\"Construction\",subsection.sectionsName)}}>\n            <Inputli placeholder=\"Add Constrant\"></Inputli>\n          </form>\n          </div>)}\n        <form onSubmit={(e) => {addsection(e,\"Construction\")}}>\n          <Inputsec placeholder=\"Add Section\"></Inputsec>\n        </form>\n        \n        \n        </Col>\n      </Bor>\n\n\n      \n    </Scr>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}